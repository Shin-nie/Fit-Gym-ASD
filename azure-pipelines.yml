trigger:
  - "*"

pool:
  vmImage: ubuntu-latest

variables:
  APP_NAME: 'FitGymASD'  # Your Azure App Service name
  RESOURCE_GROUP: 'ASDFitGym_group'  # Your Azure resource group name
  AZURE_SUBSCRIPTION: 'Azure for Students'  # Azure DevOps service connection name for your subscription

stages:
- stage: BuildTestDeploy
  jobs:
  - job: BuildTestDeploy
    pool:
      vmImage: ubuntu-latest
    steps:
    # Login to Azure
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logged in to Azure"
      displayName: "Login to Azure"

    # Install Node.js version compatible with your project
    - task: NodeTool@0
      inputs:
        versionSpec: "16.x"
      displayName: "Install Node.js"

    # Install NPM dependencies and build the frontend project using Vite
    - script: |
        npm install
        npm run build
      workingDirectory: ./FrontEnd # Make sure the working directory is where package.json exists
      displayName: "npm install and build"

    # Run unit tests for TrainerProfile and append to JUnit report
    - script: |
        npm test --watchAll=false
      workingDirectory: ./FrontEnd # Path to package.json and tests
      displayName: 'Run every unit test'

    # Publish the merged JUnit test results
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: './FrontEnd/junit.xml' # Path to JUnit test result file, matches the output directory in package.json
        testRunTitle: 'Merged Test Results'
        mergeTestResults: true

    # Optional: If you want to collect code coverage reports
    # - script: |
    #     npm test -- --coverage --watchAll=false
    #   workingDirectory: ./FrontEnd
    #   displayName: 'Run tests with code coverage'

    # Copy built frontend (dist) to backend public directory
    - script: |
        mkdir -p ./BackEnd/public
        cp -r ./FrontEnd/dist/* ./BackEnd/public/
      displayName: "Copy Frontend build to Backend public directory"

    # Install backend dependencies
    - script: |
        npm install
      workingDirectory: ./BackEnd
      displayName: "Install Backend dependencies"

    # Deploy the App using Azure CLI
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Starting deployment to Azure App Service..."
          az webapp up --name $(APP_NAME) --resource-group $(RESOURCE_GROUP) --runtime "NODE|18-lts" --location "Australia Central"
          echo "Deployment to Azure App Service complete!"
      displayName: "Deploy to Azure App Service using Azure CLI"