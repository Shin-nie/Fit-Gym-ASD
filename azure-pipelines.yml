trigger:
  - "*"

pool:
  vmImage: ubuntu-latest

variables:
  APP_NAME: 'FitGymASD'  # Your Azure App Service name for both frontend and backend
  RESOURCE_GROUP: 'ASDFitGym_group'  # Your Azure resource group name
  PUBLISH_PROFILE: $(PUBLISH_PROFILE)  # Store the Publish Profile securely in Azure DevOps as a secret

stages:
- stage: BuildAndDeploy
  jobs:
  - job: BuildDeploy
    pool:
      vmImage: ubuntu-latest
    steps:
      # Install Node.js for both frontend and backend
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js'

      # Install backend dependencies
      - script: |
          cd BackEnd
          npm install
          npm install express
        displayName: 'Install Backend Dependencies'

      # Install frontend dependencies and run unit tests
      - script: |
          cd FrontEnd
          npm install
          npm test --watchAll=false  # Run unit tests without watch mode
        displayName: 'Run Frontend Unit Tests'

      # Publish the merged JUnit test results
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: './FrontEnd/junit.xml'  # Path to JUnit test result file, adjust if needed
          testRunTitle: 'Frontend Unit Test Results'
          mergeTestResults: true
        displayName: 'Publish Unit Test Results'

      # Build the frontend after tests pass
      - script: |
          cd FrontEnd
          npm run build
        displayName: 'Build Frontend'

      # Copy frontend build output to backend public directory
      - script: |
          mkdir -p BackEnd/public
          cp -r FrontEnd/dist/* BackEnd/public/
        displayName: 'Copy Frontend Build to Backend Public Directory'

      # Archive the entire backend (including frontend build files) for deployment
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/BackEnd'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        displayName: 'Archive Combined Backend and Frontend for Deployment'

      # Deploy to Azure App Service using Publish Profile via az webapp deploy
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo "Starting deployment using Publish Profile..."
            echo "$PUBLISH_PROFILE" > publishProfile.publishsettings
            az webapp deploy --resource-group $(RESOURCE_GROUP) --name $(APP_NAME) --src-path $(Build.ArtifactStagingDirectory)/app.zip --publish-profile publishProfile.publishsettings
        env:
          PUBLISH_PROFILE: $(PUBLISH_PROFILE)  # Explicitly map the secret as an environment variable
        displayName: 'Deploy to Azure App Service using Publish Profile'