trigger:
  - "*"

pool:
  vmImage: ubuntu-latest

variables:
  FTPS_URL: 'ftps://waws-prod-yt1-067.ftp.azurewebsites.net/site/wwwroot'  # FTPS Endpoint
  FTP_USERNAME: 'gym\$gym'  # FTPS Username
  # Make sure FTP_PASSWORD is stored as a secret in Azure DevOps

stages:
- stage: BuildAndDeploy
  jobs:
  - job: BuildAndDeploy
    pool:
      vmImage: ubuntu-latest
    steps:
    # Install Node.js
    - task: NodeTool@0
      inputs:
        versionSpec: "18.x"
      displayName: "Install Node.js"

    # Install frontend dependencies and build
    - script: |
        npm install
        npm run build
      workingDirectory: ./FrontEnd
      displayName: "Install and build Frontend"

    # Copy built frontend (dist) to backend public directory
    - script: |
        mkdir -p ./BackEnd/public
        cp -r ./FrontEnd/dist/* ./BackEnd/public/
      displayName: "Copy Frontend build to Backend public directory"

    # Install backend dependencies
    - script: |
        npm install
      workingDirectory: ./BackEnd
      displayName: "Install Backend dependencies"

    # Create a ZIP archive of the Backend directory, including frontend build files, and exclude unnecessary files
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/BackEnd'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
        verbose: true
        excludeFiles: '**/.zipignore'  # Exclude unnecessary files specified in .zipignore
      displayName: "Archive Backend and Frontend build into ZIP"

    # Upload the ZIP file to Azure App Service via FTP
    - task: FtpUpload@2
      inputs:
        credentialsOption: 'inputs'
        serverUrl: '$(FTPS_URL)'
        username: '$(FTP_USERNAME)'
        password: '$(FTP_PASSWORD)'
        rootDirectory: '$(Build.ArtifactStagingDirectory)'
        filePatterns: 'backend.zip'
        remoteDirectory: '/site/wwwroot'
        clean: true
        overwrite: true
      displayName: 'FTP Upload ZIP to Azure App Service'

    # Unzip the archive and clean up the ZIP file on Azure
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          curl -X POST -u "$FTP_USERNAME:$FTP_PASSWORD" \
            -H "Content-Type: application/json" \
            -d '{ "command": "unzip -o /site/wwwroot/backend.zip -d /site/wwwroot && rm /site/wwwroot/backend.zip" }' \
            https://gym-hkdtbzfbg4fjeyad.scm.azurewebsites.net/api/command
      displayName: "Unzip and Cleanup on Azure"
