trigger:
  - "*"

pool:
  vmImage: ubuntu-latest

variables:
  APP_NAME: 'FitGym2'                    # Azure App Service name
  RESOURCE_GROUP: 'ASDFitGym_group'       # Azure resource group name
  AZURE_SUBSCRIPTION: '62b9d863-30e0-48d2-accb-5cefbcdf6d93' # Subscription ID
  WEB_APP_DOMAIN: 'fitgym2-baf8c4gabmfwfgdq.canadacentral-01.azurewebsites.net' # App Service domain

stages:
- stage: BuildAndDeploy
  jobs:
  - job: BuildDeploy
    pool:
      vmImage: ubuntu-latest
    steps:
      # Install Node.js 18 to meet dependency requirements
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js 18.x'

      # Install backend dependencies
      - script: |
          cd BackEnd
          npm install
        displayName: 'Install Backend Dependencies'

      # Install frontend dependencies and run unit tests
      - script: |
          cd FrontEnd
          npm install
          npm test --watchAll=false
        displayName: 'Run Frontend Unit Tests'

      # Publish the merged JUnit test results
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: './FrontEnd/junit.xml'  # Adjust if necessary
          testRunTitle: 'Frontend Unit Test Results'
          mergeTestResults: true
        displayName: 'Publish Unit Test Results'

      # Build the frontend after tests pass
      - script: |
          cd FrontEnd
          npm run build
        displayName: 'Build Frontend'

      # Copy frontend build output to backend public directory
      - script: |
          mkdir -p BackEnd/public
          cp -r FrontEnd/dist/* BackEnd/public/
        displayName: 'Copy Frontend Build to Backend Public Directory'

      # Archive the entire backend (including frontend build files) for deployment
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/BackEnd'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        displayName: 'Archive Combined Backend and Frontend for Deployment'

      # Deploy to Azure App Service using AzureWebApp task
      - task: AzureWebApp@1
        inputs:
          azureSubscription: 'ASD FitGym Service'  # The name of your Azure service connection
          appName: 'FitGym2'                       # Your Azure App Service name
          package: '$(Build.ArtifactStagingDirectory)/app.zip'
        displayName: 'Deploy to Azure App Service'